// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleType {
  SUPPERADMIN
  ADMIN
  USER
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  birthday     DateTime
  email        String
  thumbnail    String
  phone        Int
  gender       String
  role         RoleType
  deleteFlg    Boolean
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
  UserProject  UserProject[]
  UserGroup    UserGroup[]
  UserList     UserList[]
  UserTask     UserTask[]
}

model Notification {
  id           Int     @id @default(autoincrement())
  id_user      Int
  User         User?   @relation(fields: [id_user], references: [id])
  descriptions String
  deleteFlg    Boolean @default(true)
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  Group       Group[]
  UserProject UserProject[]
}

model Group {
  id         Int         @id @default(autoincrement())
  name       String
  id_project Int
  Project    Project?    @relation(fields: [id_project], references: [id])
  List       List[]
  UserGroup  UserGroup[]
}

model List {
  id       Int        @id @default(autoincrement())
  name     String
  id_group Int
  Group    Group?     @relation(fields: [id_group], references: [id])
  Task     Task[]
  UserList UserList[]
}

model Task {
  id      Int    @id @default(autoincrement())
  name    String
  id_list Int
  List    List?  @relation(fields: [id_list], references: [id])

  title String

  descriptions String

  estimate_time DateTime

  level    String
  UserTask UserTask[]
}

model UserProject {
  id         Int      @id @default(autoincrement())
  id_user    Int
  id_project Int?
  User       User?    @relation(fields: [id_user], references: [id])
  Project    Project? @relation(fields: [id_project], references: [id])
}

model UserGroup {
  id       Int    @id @default(autoincrement())
  id_user  Int
  id_group Int?
  User     User?  @relation(fields: [id_user], references: [id])
  Group    Group? @relation(fields: [id_group], references: [id])
}

model UserList {
  id      Int   @id @default(autoincrement())
  id_user Int
  id_list Int?
  User    User? @relation(fields: [id_user], references: [id])
  List    List? @relation(fields: [id_list], references: [id])
}

model UserTask {
  id      Int   @id @default(autoincrement())
  id_user Int
  id_task Int?
  User    User? @relation(fields: [id_user], references: [id])
  Task    Task? @relation(fields: [id_task], references: [id])
}
